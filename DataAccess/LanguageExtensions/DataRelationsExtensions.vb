''' <summary>
''' Several language method extensions used to create data relations
''' between two tables. 
''' </summary>
''' <remarks>
''' The idea is more to hide the code which creates the relations from
''' our regular code.
''' </remarks>
Module DataRelationsExtensions
   ''' <summary>
   ''' Wrapper to create a master detail relationship
   ''' </summary>
   ''' <param name="sender"></param>
   ''' <param name="MasterTableName">Parent table</param>
   ''' <param name="ChildTableName">Child table</param>
   ''' <param name="KeyColumn">Common field linking master to child</param>
   ''' <remarks>
   ''' Relationship name is generated by concatenating the master and child
   ''' table names together
   ''' </remarks>
   <System.Diagnostics.DebuggerStepThrough()> _
   <System.Runtime.CompilerServices.Extension()> _
   Public Sub SetRelation( _
      ByVal sender As DataSet, _
      ByVal MasterTableName As String, _
      ByVal ChildTableName As String, _
      ByVal KeyColumn As String)

      sender.Relations.Add( _
         New DataRelation(String.Concat(MasterTableName, ChildTableName), _
            sender.Tables(MasterTableName).Columns(KeyColumn), _
            sender.Tables(ChildTableName).Columns(KeyColumn) _
         ) _
      )

   End Sub
   ''' <summary>
   ''' Wrapper to create a master detail relationship
   ''' </summary>
   ''' <param name="sender"></param>
   ''' <param name="MasterTableName">Parent table</param>
   ''' <param name="ChildTableName">Child table</param>
   ''' <param name="KeyColumn">Common field linking master to child</param>
   ''' <param name="Name">Relationship name</param>
   ''' <remarks></remarks>
   <System.Diagnostics.DebuggerStepThrough()> _
   <System.Runtime.CompilerServices.Extension()> _
   Public Sub SetRelation(ByVal sender As DataSet, ByVal MasterTableName As String, ByVal ChildTableName As String, ByVal KeyColumn As String, ByVal Name As String)
      sender.Relations.Add( _
         New DataRelation(Name, _
            sender.Tables(MasterTableName).Columns(KeyColumn), _
            sender.Tables(ChildTableName).Columns(KeyColumn) _
         ) _
      )
   End Sub

End Module
